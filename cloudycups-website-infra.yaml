AWSTemplateFormatVersion: "2010-09-09"
Description: "Cloudycups website hosting."

Parameters:
  UniqueBucketName:
    Type: String
    Description: "Unique name for S3 bucket"
  DomainName:
    Type: String
    Description: "Your domain"
  SubDomain:
    Type: String
    Description: "Subdomain"
    Default: "www"
  HostedZoneId:
    Type: String
    Description: "Hosted Zone ID for your domain in Route 53"

Resources:
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref UniqueBucketName
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebsiteBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub "arn:aws:s3:::${WebsiteBucket}/*"

  WebsiteCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Sub "${SubDomain}.${DomainName}"
      SubjectAlternativeNames:
        - !Ref DomainName
      ValidationMethod: DNS

  CloudFrontOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub "OAC-${UniqueBucketName}"
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4
        Description: !Sub "OAC for ${UniqueBucketName} S3 bucket"

  WebsiteDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Comment: !Sub "CloudFront for ${UniqueBucketName}"
        DefaultRootObject: index.html
        Origins:
          - Id: S3Origin
            DomainName: !GetAtt WebsiteBucket.RegionalDomainName
            S3OriginConfig: {}
            OriginAccessControlId: !GetAtt CloudFrontOriginAccessControl.Id
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods: ["GET", "HEAD"]
          CachedMethods: ["GET", "HEAD"]
          Compress: true
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
        ViewerCertificate:
          AcmCertificateArn: !Ref WebsiteCertificate
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021
        CustomErrorResponses:
          - ErrorCode: 404
            ResponsePagePath: /error.html
            ResponseCode: 404
            ErrorCachingMinTTL: 300
          - ErrorCode: 403
            ResponsePagePath: /error.html
            ResponseCode: 404
            ErrorCachingMinTTL: 300

  WebsiteDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Sub "${SubDomain}.${DomainName}"
      Type: A
      AliasTarget:
        DNSName: !GetAtt WebsiteDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2

Outputs:
  S3BucketName:
    Value: !Ref WebsiteBucket
  CloudFrontDomain:
    Value: !GetAtt WebsiteDistribution.DomainName
  WebsiteURL:
    Value: !Sub "https://${SubDomain}.${DomainName}"
